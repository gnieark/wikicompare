<?php


require_once drupal_get_path('module', 'wikicompare') . '/wikicompare_nodes.inc';
require_once drupal_get_path('module', 'wikicompare') . '/wikicompare_core_functions.inc';


//The help page of the module
function wikicompare_help($path, $arg) {

  switch ($path) {
    case "admin/help#wikicompare":
      return '<p>' . t("TODO") . '</p>';
      break;
  }

}


//The configuration page of the module
function wikicompare_admin() {

  $form = array();

  $languages = array();
  foreach (language_list() as $key => $language) {
    $languages[$key] = $language->name;
  }
  //Display the select button for managing the compared parent update
  $form['wikicompare_main_language'] = array(
    '#type' => 'select',
    '#title' => t('Main language'),
//TODO get all language
    '#options' => $languages,
    '#default_value' => language_default('language'),
    '#description' => t("Define the main language of the website."),
    '#required' => TRUE,
  );

  $form['temp'] = array(
    '#markup' => 'test' . language_default('language'),
  );
dpm(variable_get('language_content_type_feature', array()));
//variable_set('language_default', object);

  //Display the select button for managing the compared parent update
  $form['wikicompare_update_compared'] = array(
    '#type' => 'select',
    '#title' => t('Manage parent compared?'),
    '#options' => array(
      'no-update' => t("No update"),
      'update' => t("Update"),
    ),
    '#default_value' => variable_get('wikicompare_update_compared', 'no-update'),
    '#description' => t("Define if the parent compared can also have their own percentage support.<br/> 
In this case, the parent compared will support all the implementation of his children compared, and we will be able to select the parent compared in the comparative table.<br/>
<br/>
Activate this feature can take some time, because the cache table need to be recomputed."),
    '#required' => TRUE,
  );

  //Display the button to flush the caches
  $form['flush_caches'] = array(
    '#type' => 'submit',
    '#suffix' => '<br/>If you ever corrupt your data, you can use this button to recompute all the percentages.<br/>This operation may take some time.',
    '#value' => t('Flush caches'),
    '#button_type' => 'button',
    '#submit' => array('wikicompare_flush_caches'),
  );

  $form['#submit'][] = 'submit_settings';

  //Allow others modules to modify the settings page
  foreach (module_implements('wikicompare_settings_page') as $module) {
    $function = $module . '_wikicompare_settings_page';
    $function($form);
  }

  return system_settings_form($form);

}

//This function handels the submit of the settings form.
function submit_settings($form, $form_state) {

  if ($form_state['input']['wikicompare_main_language'] != language_default('language')) {
//TODO Intervertir les translation_source entre les nodes, réassigner les champs perso et les implementation sur le nouveau node referent. Si node du nouveau language non existant, changer le langage du precedent.
    $languages = language_list();
    $key = $form_state['input']['wikicompare_main_language'];
    variable_set('language_default', $languages[$key]);

  }

  if ($form_state['input']['wikicompare_update_compared'] == 'update' && variable_get('wikicompare_update_compared', 'no-update') == 'no-update') {
    wikicompare_flush_caches();
  }

  //Allow others modules to modify the action when we submit the settings page
  foreach (module_implements('wikicompare_submit_settings_page') as $module) {
    $function = $module . '_wikicompare_submit_settings_page';
    $function($form, $form_state);
  }

}

/**
 * Implements hook_menu().
 * This function create new menu in Drupal
 */
function wikicompare_menu() {

  $items = array();

  //Enable module settings page
  $items['admin/config/wikicompare'] = array(
    'title' => 'Wikicompare module settings',
    'description' => 'Wikicompare module settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wikicompare_admin'),
    'access arguments' => array('administer wikicompare settings'),
    'type' => MENU_NORMAL_ITEM,
   );

  //Enable comparative table URL
  $items['compare'] = array(
    'title' => 'Comparative Table',
    'description' => 'Comparative Table',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wikicompare_comparative_table'),
    'access callback' => TRUE,
    'file' => 'wikicompare_comparative_table.inc',
  );

  $items['get_item_list_children_callback'] = array(
    'page callback' => 'get_item_list_children_response',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'page arguments' => array(),
    'type' => MENU_CALLBACK,
    'file' => 'wikicompare_comparative_table.inc',
    'delivery callback' => 'ajax_deliver',
  );

  $items['get_feature_callback'] = array(
    'page callback' => 'get_feature_response',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'page arguments' => array(),
    'type' => MENU_CALLBACK,
    'file' => 'wikicompare_comparative_table.inc',
    'delivery callback' => 'ajax_deliver',
  );

  $items['toogle_compared_checkbox_callback'] = array(
    'page callback' => 'toggle_compared_checkbox_response',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'page arguments' => array(),
    'type' => MENU_CALLBACK,
    'file' => 'wikicompare_comparative_table.inc',
    'delivery callback' => 'ajax_deliver',
  );
  
  $items['get_dialog_callback/%/%/%/%'] = array(
    'page callback' => 'get_dialog_response',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'page arguments' => array(1,2,3,4),
    'type' => MENU_CALLBACK,
    'file' => 'wikicompare_comparative_table.inc',
  );

  $items['select_dialog_callback'] = array(
    'page callback' => 'select_dialog_response',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'page arguments' => array(),
    'type' => MENU_CALLBACK,
    'file' => 'wikicompare_comparative_table.inc',
    'delivery callback' => 'ajax_deliver',
  );

  $items['submit_dialog_callback'] = array(
    'page callback' => 'submit_dialog_response',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'page arguments' => array(),
    'type' => MENU_CALLBACK,
    'file' => 'wikicompare_comparative_table.inc',
    'delivery callback' => 'ajax_deliver',
  );

  $items['compute_comparative_table_callback'] = array(
    'page callback' => 'compute_comparative_table_response',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'page arguments' => array(),
    'type' => MENU_CALLBACK,
    'file' => 'wikicompare_comparative_table.inc',
    'delivery callback' => 'ajax_deliver',
  );

  $items['make_cleaning_callback'] = array(
    'page callback' => 'make_cleaning_response',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'page arguments' => array(),
    'type' => MENU_CALLBACK,
    'file' => 'wikicompare_comparative_table.inc',
    'delivery callback' => 'ajax_deliver',
  );

  $items['toogle_fastedit_callback'] = array(
    'page callback' => 'toggle_fastedit_response',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'page arguments' => array(),
    'type' => MENU_CALLBACK,
    'file' => 'wikicompare_comparative_table_fastedit.inc',
    'delivery callback' => 'ajax_deliver',
  );

  $items['get_fastedit_form_callback'] = array(
    'page callback' => 'get_fastedit_form_response',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'page arguments' => array(),
    'type' => MENU_CALLBACK,
    'file' => 'wikicompare_comparative_table_fastedit.inc',
    'delivery callback' => 'ajax_deliver',
  );
  
  $items['submit_fastedit_form_callback'] = array(
    'page callback' => 'submit_fastedit_form_response',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'page arguments' => array(),
    'type' => MENU_CALLBACK,
    'file' => 'wikicompare_comparative_table_fastedit.inc',
    'delivery callback' => 'ajax_deliver',
  );
  
  return $items;
}


function wikicompare_library() {
  $path = drupal_get_path('module', 'wikicompare');
  $libraries['wikicompare_comparative_table'] = array(
    'title' => 'Wikicompare',
    'version' => '1.0',
    'js' => array(
       $path . "/js/wikicompare_comparative_table.js" => array(),
    ),
  );

  return $libraries;
}


/**
 * Implements hook_node_info().
 * This function create the new node type we need for the module
 */
function wikicompare_node_info() {
  return array(
    'feature' => array(
      'name' => t('Feature'),
      'base' => 'feature',
      'description' => t('TODO : Feature description'),
      'help' => t('TODO : Features submission guidelines'),
      'title_label' => t('Title'),
    ),

    'compared' => array(
      'name' => t('Compared'),
      'base' => 'compared',
      'description' => t('TODO'),
      'help' => t('TODO'),
      'title_label' => t('Title'),
    ),

    'implementation' => array(
      'name' => t('Implementation'),
      'base' => 'implementation',
      'description' => t('TODO'),
      'help' => t('TODO'),
      'title_label' => t('Title'),
    ),


  );
}


/**
 * Implements hook_form().
 * We need it to display the title in the node form
 */
function feature_form($node, $form_state) {
  return node_content_form($node, $form_state);
}


function compared_form($node, $form_state) {
  return node_content_form($node, $form_state);
}



function wikicompare_form_compared_node_form_alter(&$form, &$form_state, $form_id) {
dpm($form);
dpm($form_state['node']);



  $nid = 0;
  if (isset($form_state['node']->nid)) {
    $nid = $form_state['node']->nid;
  }

  $form['#attached']['js'][] = '/misc/ajax.js';
  $form['#attached']['js'][] = '/misc/progress.js';
  $form['#attached']['js'][] = drupal_get_path('module', 'wikicompare') . '/js/wikicompare_comparative_table.js';
  $form['#attached']['js'][] = array(
    'type' => 'setting',
    'data' => array(
      'wikicompare' => array(
        'fastedit_status' => 0,
      )
    )
  );

  $title = 'No parent';
  if (isset($form_state['node']->wikicompare_parent_id['und'])) {
    $parent_nid = $form_state['node']->wikicompare_parent_id['und'][0]['target_id'];
    $res = get_recursive_data('compared', array($parent_nid));
    $title = $res['data'][$parent_nid]['data']->fulltitle;
  }

  $select_parent_link = array(
    'text' => 'Select parent',
    'title' => 'Select parent',
    'selector' => 'dialog-content',
    'path' => 'get_dialog_callback/select_simple_dialog/compared/form_selected_parent/' . $nid,
  );
  $clear_parent_link = l('Clear', '/',  array('attributes' => array('class' => array('clear_link'), 'type' => 'compared')));
  $form['container_selected_parent'] = array(
    'title' => array('#markup' => $title),
    '#type' => 'container',
    '#id' => 'form_selected_parent',
    '#weight' => -3,
    '#suffix' => '<p>' . theme('simple_dialog_link', $select_parent_link) . ' ' . $clear_parent_link . '</p>'
  
  );


}

function wikicompare_form_feature_node_form_alter(&$form, &$form_state, $form_id) {


  $nid = 0;
  if (isset($form_state['node']->nid)) {
    $nid = $form_state['node']->nid;
  }

  $form['#attached']['js'][] = '/misc/ajax.js';
  $form['#attached']['js'][] = '/misc/progress.js';
  $form['#attached']['js'][] = drupal_get_path('module', 'wikicompare') . '/js/wikicompare_comparative_table.js';
  $form['#attached']['js'][] = array(
    'type' => 'setting',
    'data' => array(
      'wikicompare_needs' => array(
        'fastedit_status' => 0,
      )
    )
  );

  $title = 'No parent';
  if (isset($form_state['node']->wikicompare_parent_id['und'])) {
    $parent_nid = $form_state['node']->wikicompare_parent_id['und'][0]['target_id'];
    $res = get_recursive_data('feature', array($parent_nid));
    $title = $res['data'][$parent_nid]['data']->fulltitle;
  }

  $select_parent_link = array(
    'text' => 'Select parent',
    'title' => 'Select parent',
    'selector' => 'dialog-content',
    'path' => 'get_dialog_callback/select_simple_dialog/feature/form_selected_parent/' . $nid,
  );
  $clear_parent_link = l('Clear', '/',  array('attributes' => array('class' => array('clear_link'), 'type' => 'feature')));
  $form['container_selected_parent'] = array(
    'title' => array('#markup' => $title),
    '#type' => 'container',
    '#id' => 'form_selected_parent',
    '#weight' => -3,
    '#suffix' => '<p>' . theme('simple_dialog_link', $select_parent_link) . ' ' . $clear_parent_link . '</p>'
  
  );


}

/**
 * Implements hook_theme().
 */
function wikicompare_theme() {
  return array(
    // Theme function for the compare table
    'wikicompare_comparative_table' => array(
      'render element' => 'form',
      'file' => 'wikicompare_comparative_table.inc',
    ),
  );
}


?>
