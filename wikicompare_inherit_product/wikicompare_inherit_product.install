<?php

/**
 * @file
 * Install, update, and uninstall functions for the wikicompare_inherit_product module.
 */



/**
 * Implements hook_schema()
 * Add the inherit product fields in cache tables.
 */
function wikicompare_inherit_product_schema_alter(&$schema) {

  $schema['cache_product']['fields']['inherit_product_id'] = array(
      'description' => 'The inherited id of the product node',
      'type' => 'int',
      'unsigned' => TRUE,
  );
  $schema['cache_product']['indexes']['inherit_product_id'] = array('inherit_product_id');
  $schema['cache_product']['foreign keys']['inherit_product_id'] = array(
    'table' => 'node',
    'columns' => array('inherit_product_id' => 'nid'),
  );
  $schema['cache_product']['fields']['inherit_changed'] = array(
    'description' => "Boolean indicated that the inherited product of this node has changed, and thus we need to update the parent through inherit of his evaluations",
    'type' => 'int',
    'size' => 'tiny',
    'not null' => TRUE,
    'default' => 0,
  );
  $schema['cache_product']['indexes']['inherit_changed'] = array('inherit_changed');

  $schema['cache_evaluation']['fields']['use_from_inherit'] = array(
      'description' => "Boolean indicated if we should use the data from the inherited product",
      'type' => 'int',
      'size' => 'tiny',
      'not null' => TRUE,
      'default' => 1,
  );
  $schema['cache_evaluation']['fields']['parent_through_inherit_id'] = array(
    'description' => 'The inherited evaluation id',
    'type' => 'int',
    'unsigned' => TRUE,
  );
  $schema['cache_evaluation']['indexes']['parent_through_inherit_id'] = array('parent_through_inherit_id');
  $schema['cache_evaluation']['foreign keys']['parent_through_inherit_id'] = array(
    'table' => 'node',
    'columns' => array('parent_through_inherit_id' => 'nid'),
  );

}



/**
 * Implements hook_install().
 * This function is called only once at the module installation
 */
function wikicompare_inherit_product_install() {

  $t = get_t();

  // Ensure that new node type is available.
  node_types_rebuild();


  //Add index in cache table.
  $schema = drupal_get_schema('cache_product');
  db_add_field('cache_product', 'inherit_product_id', $schema['fields']['inherit_product_id']);
  db_add_index('cache_product', 'inherit_product_id', array('inherit_product_id'));

  //Add field.
  $field = array(
    'field_name' => 'wikicompare_inherit_product_id',
    'type' => 'entityreference',
    'cardinality' => 1,
    'settings' => array(
      'target_type' => 'node',
      'handler_settings' => array('target_bundles' => array('product')),
    ),
  );
  field_create_field($field);

  $instance = array(
    'field_name' => 'wikicompare_inherit_product_id',
    'entity_type' => 'node',
    'bundle' => 'product',
    'label' => 'Inherit Product',
    'widget' => array(
      'type' => 'entityreference_autocomplete',
    ),
    'settings' => array(
      'target_type' => 'node',
      'handler_settings' => array('target_bundles' => array('product')),
    ),
  );
  field_create_instance($instance);

  db_add_field('cache_product', 'inherit_changed', $schema['fields']['inherit_changed']);
  db_add_index('cache_product', 'inherit_changed', array('inherit_changed'));

  //Add index in the cache table.
  $schema = drupal_get_schema('cache_evaluation');
  db_add_field('cache_evaluation', 'use_from_inherit', $schema['fields']['use_from_inherit']);

  //Add field.
  $field = array(
    'field_name' => 'wikicompare_use_from_inherit',
    'type' => 'list_boolean',
    'cardinality' => 1,
    'settings' => array(
      'allowed_values' => array(
        0 => 'Using personnal data',
        1 => 'Using data from inherited product',
      ),
    ),
  );
  field_create_field($field);

  $instance = array(
    'field_name' => 'wikicompare_use_from_inherit',
    'entity_type' => 'node',
    'bundle' => 'evaluation',
    'label' => 'Use data from inherit product?',
    'description' => 'TODO',
    'default_value' => array(
      1 => array(
        'value' => 1,
      ),
    ),
    'widget' => array(
      'type' => 'options_onoff',
    ),
  );
  field_create_instance($instance);

  db_add_field('cache_evaluation', 'parent_through_inherit_id', $schema['fields']['parent_through_inherit_id']);
  db_add_index('cache_evaluation', 'parent_through_inherit_id', array('parent_through_inherit_id'));

  //Set use_from_inherit of old evaluations to 1.
  $evaluations = db_query("SELECT nid FROM node WHERE type = 'evaluation'");
  foreach($evaluations as $item) {
    $node = node_load($item->nid);
    $node->evaluation_use_from_inherit['und'][0]['value'] = 1;
    node_save($node);
  }

  //Update cache
  db_update('cache_evaluation')
    ->fields(array(
      'use_from_inherit' => 1,
    ))
    ->execute();

}



/**
 * Implements hook_uninstall().
 * This function is called at the module uninstallation
 */
function wikicompare_inherit_product_uninstall() {

  //Remove field in cache.
  db_drop_field('cache_product', 'inherit_product_id');
  db_drop_index('cache_product', 'inherit_product_id');
  field_delete_field('wikicompare_inherit_product_id');
  db_drop_field('cache_product', 'inherit_changed');
  db_drop_index('cache_product', 'inherit_changed');

  db_drop_field('cache_evaluation', 'use_from_inherit');
  field_delete_field('wikicompare_use_from_inherit');
  db_drop_field('cache_evaluation', 'parent_through_inherit_id');
  db_drop_index('cache_evaluation', 'parent_through_inherit_id');

  // Purge all field information
  // api.drupal.org/api/function/field_purge_batch/7
  field_purge_batch(1000);

}

?>
