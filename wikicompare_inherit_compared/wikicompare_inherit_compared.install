<?php

/**
 * @file
 * Install, update, and uninstall functions for the wikicompare_inherit_compared module.
 */




/**
 * Implements hook_schema()
 * This hook allow us to create some table in database
 */
function wikicompare_inherit_compared_schema_alter(&$schema) {
  
  $schema['cache_compared']['fields']['inherit_compared_id'] = array(
      'description' => 'The inherited id of the compared node',
      'type' => 'int',
      'unsigned' => TRUE,
  );
  $schema['cache_compared']['indexes']['inherit_compared_id'] = array('inherit_compared_id');
  $schema['cache_compared']['foreign keys']['node_inherit'] = array(
    'table' => 'node',
    'columns' => array('inherit_compared_id' => 'nid'),
  );


  $schema['cache_implementation']['fields']['use_from_inherit'] = array(
      'description' => "Boolean indicated if we should use the data from the inherited compared",
      'type' => 'int',
      'size' => 'tiny',
      'not null' => TRUE,
      'default' => 1,
  );


}



/**
 * Implements hook_install().
 * This function is called only once at the module installation
 */
function wikicompare_inherit_compared_install() {

  $t = get_t();

  // Ensure that new node type is available.
  node_types_rebuild();
  



  /*
   * Create inherit compared field
   */ 


  $schema = drupal_get_schema('cache_compared');
  db_add_field('cache_compared', 'inherit_compared_id', $schema['fields']['inherit_compared_id']);
  db_add_index('cache_compared', 'inherit_compared_id', array('inherit_compared_id'));



  $field = array(
    'field_name' => 'wikicompare_inherit_compared_id',
    'type' => 'entityreference',
    'cardinality' => 1,
    'settings' => array(
      'target_type' => 'node',
      'handler_settings' => array('target_bundles' => array('compared')),
    ),
  );
  field_create_field($field);

  $instance = array(
    'field_name' => 'wikicompare_inherit_compared_id',
    'entity_type' => 'node',
    'bundle' => 'compared',
    'label' => 'Inherit Compared',
    'description' => 'TODO : Si ce champ est rempli, alors toutes les features deja present dans le logiciel herite seront egalement present dans celui-ci. Neanmoins via un code couleur legerement different, plus leger pour marquer la difference.',
    'widget' => array(
      'type' => 'entityreference_autocomplete',
    ),
    'settings' => array(
      'target_type' => 'node',
      'handler_settings' => array('target_bundles' => array('compared')),
    ),
  );
  field_create_instance($instance);




  /*
   * Create use_from_inherit implementation field
   */


  $schema = drupal_get_schema('cache_implementation');
  db_add_field('cache_implementation', 'use_from_inherit', $schema['fields']['use_from_inherit']);



  $field = array(
    'field_name' => 'wikicompare_use_from_inherit',
    'type' => 'list_boolean',
    'cardinality' => 1,
    'settings' => array(
      'allowed_values' => array(
        0 => 'Using personnal data',
        1 => 'Using data from inherited compared',
      ),
    ),
  );
  field_create_field($field);

  $instance = array(
    'field_name' => 'wikicompare_use_from_inherit',
    'entity_type' => 'node',
    'bundle' => 'implementation',
    'label' => 'Use data from inherit compared?',
    'description' => 'TODO',
    'default_value' => array(
      1 => array(
        'value' => 1,
      ),
    ),
    'required' => 1,
    'widget' => array(
      'type' => 'options_select',
    ),
  );
  field_create_instance($instance);


  //Set use_from_inherit of old implementation to 1
  $implementations = db_query("SELECT nid FROM node WHERE type = 'implementation'");

  foreach($implementations as $item) {
    $node = node_load($item->nid);
    $node->implementation_use_from_inherit['und'][0]['value'] = 1;
    node_save($node);
  }

  //Update cache
  db_update('cache_implementation')
    ->fields(array(
      'use_from_inherit' => 1,
    ))
    ->execute();



}

/**
 * Implements hook_uninstall().
 * This function is called at the module uninstallation
 */
function wikicompare_inherit_compared_uninstall() {


  db_drop_field('cache_compared', 'inherit_compared_id');
  db_drop_index('cache_compared', 'inherit_compared_id');
  field_delete_field('wikicompare_inherit_compared_id');

  db_drop_field('cache_implementation', 'use_from_inherit');
  field_delete_field('wikicompare_use_from_inherit');



  // Purge all field information
  // api.drupal.org/api/function/field_purge_batch/7
  field_purge_batch(1000);

}

?>
